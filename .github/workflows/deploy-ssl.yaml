name: Deploy SSL Configuration

on:
  workflow_dispatch:  # –¢–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  deploy-ssl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG_DATA" | base64 -d > ~/.kube/config
        kubectl cluster-info
        
    - name: Install cert-manager
      run: |
        echo "üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cert-manager..."
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml
        
        echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ cert-manager..."
        sleep 60
        
        # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ cert-manager
        kubectl wait --namespace cert-manager \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/instance=cert-manager \
          --timeout=300s
          
        echo "‚úÖ cert-manager —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
    - name: Deploy ClusterIssuer
      run: |
        echo "üìù –°–æ–∑–¥–∞–µ–º ClusterIssuer –¥–ª—è Let's Encrypt..."
        kubectl apply -f k8s/cluster-issuer.yaml
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ClusterIssuer —Å–æ–∑–¥–∞–Ω
        kubectl get clusterissuer
        
    - name: Update Ingress with SSL
      run: |
        echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º Ingress —Å SSL –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º–∏..."
        kubectl apply -f k8s/ingress-ssl.yaml
        
        echo "‚è≥ –û–∂–∏–¥–∞–µ–º –≤—ã–ø—É—Å–∫ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
        sleep 30
        
    - name: Verify SSL Setup
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
        
        echo "=== Certificates ==="
        kubectl get certificates -A
        
        echo "=== Certificate Requests ==="
        kubectl get certificaterequests -A
        
        echo "=== Orders ==="
        kubectl get orders -A
        
        echo "=== Challenges ==="
        kubectl get challenges -A
        
        echo "=== –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ==="
        kubectl describe certificate clerikc-ru-tls
        
        echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –¥–æ—Å—Ç—É–ø–∞ ==="
        curl -I -k https://clerikc.ru:30443/ || echo "HTTPS –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        
    - name: Monitor Certificate Status
      run: |
        echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ 1-5 –º–∏–Ω—É—Ç)..."
        timeout 300s bash -c 'while true; do
          STATUS=$(kubectl get certificate clerikc-ru-tls -o jsonpath="{.status.conditions[?(@.type==\"Ready\")].status}" 2>/dev/null || echo "Unknown")
          if [ "$STATUS" = "True" ]; then
            echo "üéâ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≥–æ—Ç–æ–≤ –∏ –≤–∞–ª–∏–¥–µ–Ω!"
            break
          elif [ "$STATUS" = "False" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ –≤—ã–ø—É—Å–∫–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
            kubectl describe certificate clerikc-ru-tls
            exit 1
          else
            echo "‚è≥ –°—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: $STATUS - –∂–¥–µ–º..."
            sleep 10
          fi
        done' || echo "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—Ä—É—á–Ω—É—é"