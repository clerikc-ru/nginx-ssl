name: Deploy Nginx Application

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG_DATA" | base64 -d > ~/.kube/config
        kubectl cluster-info
        
    - name: Cleanup existing application
      run: |
        # Удаляем старые ресурсы приложения если они есть
        kubectl delete -f k8s/ingress.yaml --ignore-not-found=true
        kubectl delete -f k8s/service.yaml --ignore-not-found=true
        kubectl delete -f k8s/deployment.yaml --ignore-not-found=true
        kubectl delete configmap nginx-html --ignore-not-found=true
        sleep 3
        
    - name: Deploy Ingress Nginx
      run: |
        # Устанавливаем ingress-nginx (он автоматически встанет на control-plane)
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
        
        # Ждем запуска
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=180s
        
        # Применяем наш NodePort сервис
        kubectl apply -f k8s/ingress-service.yaml
        
        # Проверяем размещение
        echo "=== Проверка ingress-nginx ==="
        kubectl get pods -n ingress-nginx -o wide
        
    - name: Create ConfigMap from HTML files
      run: |
        # Создаем ConfigMap из папки html/
        kubectl create configmap nginx-html --from-file=html/ -o yaml --dry-run=client > k8s/configmap-generated.yaml
        kubectl apply -f k8s/configmap-generated.yaml
        
    - name: Deploy Application
      run: |
        # Применяем все манифесты
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml
        
    - name: Wait for application to be ready
      run: |
        kubectl rollout status deployment/nginx-app --timeout=90s
        
    - name: Verify Setup
      run: |
        echo "=== Проверка ConfigMap ==="
        kubectl get configmap nginx-html
        
        echo "=== Проверка Pods ==="
        kubectl get pods -A -o wide | grep -E "(nginx-app|ingress-nginx)"
        
        echo "=== Проверка Services ==="
        kubectl get svc -A | grep -E "(nginx-service|ingress-nginx)"
        
        echo "=== Проверка Ingress ==="
        kubectl get ingress -A
        
        echo "=== Проверка доступности ==="
        sleep 10
        curl -v --retry 3 --retry-delay 5 http://185.8.22.53:30080/ | head -10 || echo "CURL failed, but continuing..."